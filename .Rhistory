fit_in_15 <- train_in15 %>%
fabletools::model(model15 = TSLM(ind_se ~ massa_r + du + pmc_a_se + lag_ind_se)) %>%
report()
fore_15 <- new_data(train_in15, 24) %>%
left_join(test_in15, by = 'date') %>%
select(date,  massa_r  , du, pmc_a_se, lag_ind_se)
fc_15 <- forecast(fit_in_15, new_data = fore_15)
ac_f15 <- fc_15 %>%
accuracy(test_in15)
#print(xtable(ac_f15), comment=FALSE)
eval5 <- as_tibble(rbind(ac_f1, ac_f2, ac_f3, ac_f4, ac_f5, ac_f6, ac_f7, ac_f8, ac_f9, ac_f10, ac_f11, ac_f12, ac_f13, ac_f14,
ac_f15, ac_f16)) %>%
select(.model,RMSE, MAE, MPE, MAPE )
eval5 <- eval5 %>%
arrange(RMSE)
gt(eval5[1:6,]) %>%
tab_header(
title = "Metricas de avaliacao dos modelos estimados",
)
train_in15 <- train_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_in15 <- test_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_in15 <- test_in15 %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se, lag_ind_se)
fit_in_15 <- train_in15 %>%
fabletools::model(model15 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se + lag_ind_se)) %>%
report()
modelo_15 <- lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se + lag_ind_se, data = na.omit(train_in15))
regclass::VIF(modelo_15)
fore_15 <- new_data(train_in15, 24) %>%
left_join(test_in15, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se, lag_ind_se)
fc_15 <- forecast(fit_in_15, new_data = fore_15)
ff_15 <- test_in15 %>% select(date, ind_se) %>%
left_join(fc_15, by = 'date') %>%
ggplot(aes(x = date)) +
geom_line(aes(y = ind_se.x, colour = "Data")) +
geom_line(aes(y = .mean, colour = "Fitted")) +
xlab("Year") + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
ac_f15 <- fc_15 %>%
accuracy(test_in15)
eval5 <- as_tibble(rbind(ac_f1, ac_f2, ac_f3, ac_f4, ac_f5, ac_f6, ac_f7, ac_f8, ac_f9, ac_f10, ac_f11, ac_f12, ac_f13, ac_f14,
ac_f15, ac_f16)) %>%
select(.model,RMSE, MAE, MPE, MAPE )
eval5 <- eval5 %>%
arrange(RMSE)
gt(eval5[1:6,]) %>%
tab_header(
title = "Metricas de avaliacao dos modelos estimados",
)
ff_15
test_in7 <- test_in %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se)
fit_in_7 <- train_in %>%
fabletools::model(model7 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se)) %>%
report()
fc_7 <- forecast(fit_in_7, new_data = fore_7)
ac_f7 <- fc_7 %>%
accuracy(test_in7)
#print(xtable(ac_f7), comment=FALSE)
eval5 <- as_tibble(rbind(ac_f1, ac_f2, ac_f3, ac_f4, ac_f5, ac_f6, ac_f7, ac_f8, ac_f9, ac_f10, ac_f11, ac_f12, ac_f13, ac_f14,
ac_f15, ac_f16)) %>%
select(.model,RMSE, MAE, MPE, MAPE )
eval5 <- eval5 %>%
arrange(RMSE)
gt(eval5[1:6,]) %>%
tab_header(
title = "Metricas de avaliacao dos modelos estimados",
)
knitr::opts_chunk$set(echo = FALSE)
library(stargazer)
stargazer(modelo_15)
knitr::opts_chunk$set(echo = FALSE)
modelo_15 <- lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se + lag_ind_se, data = na.omit(train_in15))
library(stargazer)
stargazer(modelo_15)
knitr::opts_chunk$set(echo = FALSE)
modelo_16 <- lm(formula = ind_se ~ pim_se + du + lag_ind_se, data = na.omit(train_in16))
train_in16 <- train_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
pim_se = (pim_se),
du = du,
lag_ind_se = lag(ind_se))
test_in16 <- test_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
pim_se = (pim_se),
du = du,
ind_se_l = lag_ind_se)
train_in16 <- train_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
pim_se = (pim_se),
du = du,
lag_ind_se = lag(ind_se))
test_in16 <- test_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
pim_se = (pim_se),
du = du,
lag_ind_se = lag_ind_se)
train_in16 <- train_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
pim_se = (pim_se),
du = du,
lag_ind_se = lag(ind_se))
test_in16 <- test_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
pim_se = (pim_se),
du = du,
lag_ind_se = lag_ind_se)
train_in16 <- train_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
pim_se = (pim_se),
du = du,
lag_ind_se = lag(ind_se))
test_in16 <- test_in %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
pim_se = (pim_se),
du = du,
lag_ind_se = lag(ind_se))
test_in16 <- test_in16 %>%
select(date, ind_se, pim_se , du, lag_ind_se)
fit_in_16 <- train_in16 %>%
fabletools::model(model16 = TSLM(ind_se ~ pim_se + du + lag_ind_se)) %>%
report()
fore_16 <- new_data(train_in16, 24) %>%
left_join(test_in16, by = 'date') %>%
select(date, pim_se , du, lag_ind_se)
fc_16 <- forecast(fit_in_16, new_data = fore_16)
ac_f16 <- fc_16 %>%
accuracy(test_in16)
#print(xtable(ac_f16), comment=FALSE)
knitr::opts_chunk$set(echo = FALSE)
modelo_16 <- lm(formula = ind_se ~ pim_se + du + lag_ind_se, data = na.omit(train_in16))
modelo_13 <- lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = train_in13)
library(stargazer)
stargazer(modelo_16, modelo_13)
knitr::opts_chunk$set(echo = FALSE)
modelo_3 <-  lm(formula = ind_se ~ renda_r + massa_r + pim_se + du + pmc_a_se, data = train_in)
modelo_9<- lm(formula = ind_se ~ pim_se + du + pmc_a_se, data = train_in)
library(stargazer)
stargazer(modelo_3, modelo_9)
train_15 <- train %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_15 <- test %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_15 <- test_15 %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se, lag_ind_se)
fit_15 <- train_15 %>%
fabletools::model(model15 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se + lag_ind_se)) %>%
report()
ind_se2 <- fc_7$.mean[-1] # eu utilizei o consumo de energia industrial projetado do melhor modelo sem defasagem como proxy.
ind_se3 <- c(tail(train_15$lag_ind_se,1), ind_se2)
test_15$ind_se_l <- ind_se3
fore_15 <- new_data(train_15, 22) %>%
left_join(test_15, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se, lag_ind_se)
fc_15 <- forecast(fit_15, new_data = fore_15)
base2 %>%
autoplot(ind_se) +
autolayer(fc_15) +
xlab(NULL) + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
ff15 <- lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = na.omit(train_15))
lmtest::bptest(ff15)
lmtest::resettest(ff15)
#print(xtable(ac_f15), comment=FALSE)
train_15 <- train %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_15 <- test %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_15 <- test_15 %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se, lag_ind_se)
fit_15 <- train_15 %>%
fabletools::model(model15 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se + lag_ind_se)) %>%
ind_se2 <- fc_7$.mean[-1] # eu utilizei o consumo de energia industrial projetado do melhor modelo sem defasagem como proxy.
train_15 <- train %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_15 <- test %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_15 <- test_15 %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se, lag_ind_se)
fit_15 <- train_15 %>%
fabletools::model(model15 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se + lag_ind_se))
ind_se2 <- fc_7$.mean[-1] # eu utilizei o consumo de energia industrial projetado do melhor modelo sem defasagem como proxy.
ind_se3 <- c(tail(train_15$lag_ind_se,1), ind_se2)
test_15$ind_se_l <- ind_se3
fore_15 <- new_data(train_15, 22) %>%
left_join(test_15, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se, lag_ind_se)
fc_15 <- forecast(fit_15, new_data = fore_15)
base2 %>%
autoplot(ind_se) +
autolayer(fc_15) +
xlab(NULL) + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
ff15 <- lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = na.omit(train_15))
lmtest::bptest(ff15)
lmtest::resettest(ff15)
#print(xtable(ac_f15), comment=FALSE)
test_7 <- test %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se)
fit_7 <- train %>%
fabletools::model(model7 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se)) %>%
modelo_7 <-  lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = train)
test_7 <- test %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se)
fit_7 <- train %>%
fabletools::model(model7 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se))
modelo_7 <-  lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = train)
regclass::VIF(modelo_7)
fore_7 <- new_data(train, 22) %>%
left_join(test_7, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se)
fc_7 <- forecast(fit_7, new_data = fore_7)
base2 %>%
autoplot(ind_se) +
autolayer(fc_7) +
xlab(NULL) + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
#print(xtable(ac_f7), comment=FALSE)
train_15 <- train %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_15 <- test %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
lag_ind_se = lag(ind_se))
test_15 <- test_15 %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se, lag_ind_se)
fit_15 <- train_15 %>%
fabletools::model(model15 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se + lag_ind_se))
ind_se2 <- fc_7$.mean[-1] # eu utilizei o consumo de energia industrial projetado do melhor modelo sem defasagem como proxy.
ind_se3 <- c(tail(train_15$lag_ind_se,1), ind_se2)
test_15$ind_se_l <- ind_se3
fore_15 <- new_data(train_15, 22) %>%
left_join(test_15, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se, lag_ind_se)
fc_15 <- forecast(fit_15, new_data = fore_15)
base2 %>%
autoplot(ind_se) +
autolayer(fc_15) +
xlab(NULL) + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
ff15 <- lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = na.omit(train_15))
lmtest::bptest(ff15)
lmtest::resettest(ff15)
#print(xtable(ac_f15), comment=FALSE)
test_in7 <- test_in %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se)
fit_in_7 <- train_in %>%
fabletools::model(model7 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se)) %>%
report()
modelo_7 <-  lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = train_in)
regclass::VIF(modelo_7)
fore_7 <- new_data(train_in, 24) %>%
left_join(test_in7, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se)
fc_7 <- forecast(fit_in_7, new_data = fore_7)
ff_7 <- test_in7 %>% select(date, ind_se) %>%
left_join(fc_7, by = 'date') %>%
ggplot(aes(x = date)) +
geom_line(aes(y = ind_se.x, colour = "Data")) +
geom_line(aes(y = .mean, colour = "Fitted")) +
xlab("Year") + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
ac_f7 <- fc_7 %>%
accuracy(test_in7)
#print(xtable(ac_f7), comment=FALSE)
test_7 <- test %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se)
fit_7 <- train %>%
fabletools::model(model7 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se)) %>%
report()
modelo_7 <-  lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = train)
regclass::VIF(modelo_7)
fore_7 <- new_data(train, 22) %>%
left_join(test_7, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se)
fc_7 <- forecast(fit_7, new_data = fore_7)
base2 %>%
autoplot(ind_se) +
autolayer(fc_7) +
xlab(NULL) + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
#print(xtable(ac_f7), comment=FALSE)
train_15 <- train %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
ind_se_l = lag(ind_se))
test_15 <- test %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
ind_se_l = lag(ind_se))
test_15 <- test_15 %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se, ind_se_l)
fit_15 <- train_15 %>%
fabletools::model(model15 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se + ind_se_l)) %>%
report()
ind_se2 <- fc_7$.mean[-1] # eu utilizei o consumo de energia industrial projetado do melhor modelo sem defasagem como proxy.
ind_se3 <- c(tail(train_15$ind_se_l,1), ind_se2)
test_15$ind_se_l <- ind_se3
fore_15 <- new_data(train_15, 22) %>%
left_join(test_15, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se, ind_se_l)
fc_15 <- forecast(fit_15, new_data = fore_15)
base2 %>%
autoplot(ind_se) +
autolayer(fc_15) +
xlab(NULL) + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
#print(xtable(ac_f15), comment=FALSE)
gt(lmtest::bptest(ff15))
knitr::opts_chunk$set(echo = FALSE)
modelo_15 <- lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se + lag_ind_se, data = na.omit(train_in15))
library(stargazer)
stargazer(modelo_15)
lmtest::bptest(ff15)
lmtest::resettest(ff15)
test_7 <- test %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se)
fit_7 <- train %>%
fabletools::model(model7 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se)) %>%
report()
modelo_7 <-  lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = train)
regclass::VIF(modelo_7)
fore_7 <- new_data(train, 22) %>%
left_join(test_7, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se)
fc_7 <- forecast(fit_7, new_data = fore_7)
base2 %>%
autoplot(ind_se) +
autolayer(fc_7) +
xlab(NULL) + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
#print(xtable(ac_f7), comment=FALSE)
train_15 <- train %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
ind_se_l = lag(ind_se))
test_15 <- test %>%
select(date, ind_se, renda_r, massa_r, pim_se, du, pmc_a_se) %>%
mutate(ind_se = ind_se,
massa_r = (massa_r),
pim_se = (pim_se),
du = du,
pmc_a_se = (pmc_a_se),
ind_se_l = lag(ind_se))
test_15 <- test_15 %>%
select(date, ind_se, massa_r, pim_se , du, pmc_a_se, ind_se_l)
fit_15 <- train_15 %>%
fabletools::model(model15 = TSLM(ind_se ~ massa_r + pim_se + du + pmc_a_se + ind_se_l)) %>%
report()
ind_se2 <- fc_7$.mean[-1] # eu utilizei o consumo de energia industrial projetado do melhor modelo sem defasagem como proxy.
ind_se3 <- c(tail(train_15$ind_se_l,1), ind_se2)
test_15$ind_se_l <- ind_se3
fore_15 <- new_data(train_15, 22) %>%
left_join(test_15, by = 'date') %>%
select(date,  massa_r , pim_se , du, pmc_a_se, ind_se_l)
fc_15 <- forecast(fit_15, new_data = fore_15)
base2 %>%
autoplot(ind_se) +
autolayer(fc_15) +
xlab(NULL) + ylab(NULL) +
labs(title="Previsão de consumo de energia para a indústria do SE",
y="Consumo de energia (Gwh)") +
ggeasy::easy_center_title()
#print(xtable(ac_f15), comment=FALSE)
lmtest::bptest(modelo_15)
View(energia_regiao2)
modelo_15
modelo 16
modelo_16
modelo_16
summary(modelo_16)
stargazer(modelo_15)
knitr::opts_chunk$set(echo = FALSE)
modelo_15 <- lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se + lag_ind_se, data = na.omit(train_in15))
summary(modelo_15)
summary(modelo_16)
summary(modelo_7)
summary(modelo_13)
summary(modelo_3)
summary(modelo_2)
summary(modelo_12)
dwtest(modelo_15)
ac <- dwtest(modelo_15)
ac
coeftest(modelo_15)
ac <- dwtest(modelo_15)
ac
eval5 <- as_tibble(rbind(ac_f1, ac_f2, ac_f3, ac_f4, ac_f5, ac_f6, ac_f7, ac_f8, ac_f9, ac_f10, ac_f11, ac_f12, ac_f13, ac_f14,
ac_f15, ac_f16)) %>%
select(.model,RMSE, MAE, MPE, MAPE )
eval5 <- eval5 %>%
arrange(RMSE)
gt(eval5[1:6,]) %>%
tab_header(
title = "Metricas de avaliacao dos modelos estimados",
)
eval5 <- as_tibble(rbind(ac_f1, ac_f2, ac_f3, ac_f4, ac_f5, ac_f6, ac_f7, ac_f8, ac_f9, ac_f10, ac_f11, ac_f12, ac_f13, ac_f14,
ac_f15, ac_f16)) %>%
select(.model,RMSE, MAE, MPE, MAPE )
eval5 <- eval5 %>%
arrange(RMSE)
gt(eval5[1:5,]) %>%
tab_header(
title = "Metricas de avaliacao dos modelos estimados",
)
modelo_16 <- lm(formula = ind_se ~ pim_se + du + lag_ind_se, data = na.omit(train_in16))
summary(modelo_16)
modelo_7 <-  lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = train_in)
summary(modelo_7)
modelo_13 <- lm(formula = ind_se ~ massa_r + pim_se + du + pmc_a_se, data = train_in13)
summary(modelo_13)
modelo_3 <-  lm(formula = ind_se ~ renda_r + massa_r + pim_se + du + pmc_a_se, data = train_in)
summary(modelo_3)
